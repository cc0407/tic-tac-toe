{"version":3,"sources":["webpack:///./src/components/Box.tsx","webpack:///./src/pages/index.ts","webpack:///./src/views/LandingPage/index.tsx"],"names":["Box","onClick","id","className","Landing","useState","board","setBoard","letter","setLetter","gameWon","setGameWon","findAppropriateSentence","map","index","key","boardCopy","won","i","includes","checkForWinner"],"mappings":"yIAEaA,EAAM,SAAC,GAAkB,IAAjBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,GAC1B,OACI,yBAAKC,UAAU,MAAMF,QAASA,GACzBC,ICJEE,UCEQ,WACnB,MAA0BC,mBAAS,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAA7EC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,KAA9BG,EAAP,KAAeC,EAAf,KACA,EAA8BJ,mBAAS,GAAhCK,EAAP,KAAgBC,EAAhB,KACA,OACI,yBAAKR,UAAU,UACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,SAAf,YAEA,6BA4EhB,SAAkCO,EAASF,GACvC,OAAQE,GACJ,KAAK,EACD,MAAO,kBAAoBF,EAC/B,KAAK,EACD,MAAO,WAAaA,EACxB,QACI,eAnFUI,CAAwBF,EAASF,IAEvC,yBAAKL,UAAU,aACVG,EAAMO,KAAI,SAACX,EAAIY,GAAL,OACP,kBAAC,EAAD,CACAC,IAAKD,EACLZ,GAAIA,EACJD,QAAS,WACL,GAAS,MAANC,GAAyB,GAAXQ,EAAc,CAE3B,IAAMM,EAAY,YAAIV,GACtBU,EAAUF,GAASN,EACnBD,EAASS,GAGT,IAAIC,EAiCpC,SAAwBX,EAAOE,GAG3B,IAFA,IAAIS,EAAM,EAEDC,EAAI,EAAGA,EAAI,EAAGA,IAChBZ,EAAMY,KAAOV,GAAUF,EAAMY,EAAE,KAAOV,GAAUF,EAAMY,EAAE,KAAOV,IAC9DS,EAAM,GAId,IAASC,EAAI,EAAGA,GAAK,EAAGA,GAAK,EACtBZ,EAAMY,KAAOV,GAAUF,EAAMY,EAAE,KAAOV,GAAUF,EAAMY,EAAE,KAAOV,IAC9DS,EAAM,IAIXX,EAAM,KAAOE,GAAUF,EAAM,KAAOE,GAAUF,EAAM,KAAOE,GAGtDF,EAAM,KAAOE,GAAUF,EAAM,KAAOE,GAAUF,EAAM,KAAOE,KAF/DS,EAAM,GAMNX,EAAMa,SAAS,OAAgB,GAAPF,IACxBA,EAAM,GAEV,OAAOA,EA1D+BG,CAAeJ,EAAUR,GACnC,GAAW,GAAPS,EAEA,YADAN,EAAWM,GAMPR,EADW,MAAXD,EACU,IAGA,aAQlC,yBAAKL,UAAU,gBACXF,QAAS,WACLM,EAAS,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAC1DE,EAAU,KACVE,EAAW,KAJnB","file":"component---src-pages-index-ts-5ae3ae3e989450c3976a.js","sourcesContent":["import React from 'react';\n\nexport const Box = ({onClick, id}) => {\n    return(\n        <div className=\"box\" onClick={onClick}>\n            {id}\n        </div>\n    );\n};","import { Landing } from '../views/LandingPage/index';\nexport default Landing;","import React, { useState } from 'react';\nimport { Box } from '../../components/Box';\n\nexport const Landing = () => {\n    const [board, setBoard] = useState([null, null, null, null, null, null, null, null, null]);\n    const [letter, setLetter] = useState('X');\n    const [gameWon, setGameWon] = useState(0);\n    return (\n        <div className=\"window\">\n            <div className=\"viewport\">\n                <div className=\"title\">Welcome!</div>\n                \n                <div>{findAppropriateSentence(gameWon, letter)}</div>\n\n                <div className=\"gameBoard\">\n                    {board.map((id, index) => (\n                        <Box \n                        key={index}\n                        id={id} \n                        onClick={()=>{\n                            if(id == null && gameWon == 0) {\n                                //update board\n                                const boardCopy = [...board];\n                                boardCopy[index] = letter;\n                                setBoard(boardCopy);\n\n                                //check if theres a winner\n                                var won = checkForWinner(boardCopy,letter);\n                                if (won != 0) {\n                                    setGameWon(won);\n                                    return;\n                                }\n                                else {\n                                    //swap letter\n                                    if (letter === 'X') {\n                                        setLetter('O');\n                                    }\n                                    else {\n                                        setLetter('X');\n                                    }\n                                } \n                            }\n                        }}\n                        />\n                    ))}\n                </div>\n                <div className=\"confirmButton\" \n                    onClick={() => {\n                        setBoard([null, null, null, null, null, null, null, null, null]);\n                        setLetter('X');\n                        setGameWon(0);\n                    }}\n                >\n                    New Game\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction checkForWinner(board, letter) {\n    var won = 0;\n    //col\n    for (var i = 0; i < 3; i++) {\n        if(board[i] === letter && board[i+3] === letter && board[i+6] === letter) {\n            won = 1;\n        }\n    }\n    //row\n    for (var i = 0; i <= 6; i += 3) {\n        if(board[i] === letter && board[i+1] === letter && board[i+2] === letter) {\n            won = 1;\n        }\n    }\n    //diag\n    if(board[0] === letter && board[4] === letter && board[8] === letter) {\n        won = 1;\n    }\n    else if(board[2] === letter && board[4] === letter && board[6] === letter) {\n        won = 1;\n    }\n\n    if(!board.includes(null) && won == 0) {\n        won = 2;\n    }\n    return won;\n}\n\nfunction findAppropriateSentence (gameWon, letter) {\n    switch (gameWon){\n        case 0:\n            return `Active Player: ` + letter;\n        case 1:\n            return `Winner: ` + letter;\n        default:\n            return `Draw!`\n    }\n}"],"sourceRoot":""}