{"version":3,"sources":["webpack:///./src/components/Box.tsx","webpack:///./src/pages/index.ts","webpack:///./src/views/LandingPage/index.tsx"],"names":["Box","onClick","id","gameWon","className","Landing","useState","board","setBoard","letter","setLetter","setGameWon","findAppropriateSentence","map","index","key","boardCopy","won","i","includes","checkForWinner","href"],"mappings":"yIAEaA,EAAM,SAAC,GAA6B,IAA3BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,QAC/B,OACI,yBACIC,UACI,QAAgB,MAANF,GAAyB,GAAXC,EAAd,kBAEdF,QAASA,GAERC,ICTEG,UCEQ,WACnB,MAA0BC,mBAAS,CAC/B,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OATGC,EAAP,KAAcC,EAAd,KAWA,EAA4BF,mBAAS,KAA9BG,EAAP,KAAeC,EAAf,KACA,EAA8BJ,mBAAS,GAAhCH,EAAP,KAAgBQ,EAAhB,KACA,OACI,yBAAKP,UAAU,UACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,SAAf,YAEA,yBAAKA,UAAU,YAyG/B,SAAiCD,EAASM,GACtC,OAAQN,GACJ,KAAK,EACD,MAAO,kBAAoBM,EAC/B,KAAK,EACD,MAAO,WAAaA,EACxB,QACI,eA/GSG,CAAwBT,EAASM,IAGtC,yBAAKL,UAAU,aACVG,EAAMM,KAAI,SAACX,EAAIY,GAAL,OACP,kBAAC,EAAD,CACIC,IAAKD,EACLZ,GAAIA,EACJC,QAASA,EACTF,QAAS,WACL,GAAU,MAANC,GAAyB,GAAXC,EAAc,CAE5B,IAAMa,EAAY,YAAIT,GACtBS,EAAUF,GAASL,EACnBD,EAASQ,GAGT,IAAIC,EAgDxC,SAAwBV,EAAOE,GAG3B,IAFA,IAAIQ,EAAM,EAEDC,EAAI,EAAGA,EAAI,EAAGA,IAEfX,EAAMW,KAAOT,GACbF,EAAMW,EAAI,KAAOT,GACjBF,EAAMW,EAAI,KAAOT,IAEjBQ,EAAM,GAId,IAASC,EAAI,EAAGA,GAAK,EAAGA,GAAK,EAErBX,EAAMW,KAAOT,GACbF,EAAMW,EAAI,KAAOT,GACjBF,EAAMW,EAAI,KAAOT,IAEjBQ,EAAM,IAIVV,EAAM,KAAOE,GAAUF,EAAM,KAAOE,GAAUF,EAAM,KAAOE,GAG3DF,EAAM,KAAOE,GACbF,EAAM,KAAOE,GACbF,EAAM,KAAOE,KAJbQ,EAAM,GASLV,EAAMY,SAAS,OAAgB,GAAPF,IACzBA,EAAM,GAEV,OAAOA,EApFmCG,CAAeJ,EAAWP,GACpC,GAAW,GAAPQ,EAEA,YADAN,EAAWM,GAKPP,EADW,MAAXD,EACU,IAEA,aAQtC,yBACIL,UAAU,gBACVH,QAAS,WACLO,EAAS,CACL,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAEJE,EAAU,KACVC,EAAW,KAfnB,YAoBA,uBACIP,UAAU,aACViB,KAAK,mDAFT","file":"component---src-pages-index-ts-20fdff171aeca320140c.js","sourcesContent":["import React from \"react\";\n\nexport const Box = ({ onClick, id, gameWon }) => {\n    return (\n        <div\n            className={\n                `box ` + (id == null && gameWon == 0 ? `empty` : `filled`)\n            }\n            onClick={onClick}\n        >\n            {id}\n        </div>\n    );\n};\n","import { Landing } from \"../views/LandingPage/index\";\nexport default Landing;\n","import React, { useState } from \"react\";\nimport { Box } from \"../../components/Box\";\n\nexport const Landing = () => {\n    const [board, setBoard] = useState([\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n    ]);\n    const [letter, setLetter] = useState(\"X\");\n    const [gameWon, setGameWon] = useState(0);\n    return (\n        <div className=\"window\">\n            <div className=\"viewport\">\n                <div className=\"title\">Welcome!</div>\n\n                <div className=\"subtitle\">\n                    {findAppropriateSentence(gameWon, letter)}\n                </div>\n\n                <div className=\"gameBoard\">\n                    {board.map((id, index) => (\n                        <Box\n                            key={index}\n                            id={id}\n                            gameWon={gameWon}\n                            onClick={() => {\n                                if (id == null && gameWon == 0) {\n                                    //update board\n                                    const boardCopy = [...board];\n                                    boardCopy[index] = letter;\n                                    setBoard(boardCopy);\n\n                                    //check if theres a winner\n                                    var won = checkForWinner(boardCopy, letter);\n                                    if (won != 0) {\n                                        setGameWon(won);\n                                        return;\n                                    } else {\n                                        //swap letter\n                                        if (letter === \"X\") {\n                                            setLetter(\"O\");\n                                        } else {\n                                            setLetter(\"X\");\n                                        }\n                                    }\n                                }\n                            }}\n                        />\n                    ))}\n                </div>\n                <div\n                    className=\"confirmButton\"\n                    onClick={() => {\n                        setBoard([\n                            null,\n                            null,\n                            null,\n                            null,\n                            null,\n                            null,\n                            null,\n                            null,\n                            null,\n                        ]);\n                        setLetter(\"X\");\n                        setGameWon(0);\n                    }}\n                >\n                    New Game\n                </div>\n                <a\n                    className=\"accentLink\"\n                    href=\"https://github.com/cc0407/tic-tac-toe/tree/main\"\n                >\n                    View development here.\n                </a>\n            </div>\n        </div>\n    );\n};\n\nfunction checkForWinner(board, letter) {\n    var won = 0;\n    //col\n    for (var i = 0; i < 3; i++) {\n        if (\n            board[i] === letter &&\n            board[i + 3] === letter &&\n            board[i + 6] === letter\n        ) {\n            won = 1;\n        }\n    }\n    //row\n    for (var i = 0; i <= 6; i += 3) {\n        if (\n            board[i] === letter &&\n            board[i + 1] === letter &&\n            board[i + 2] === letter\n        ) {\n            won = 1;\n        }\n    }\n    //diag\n    if (board[0] === letter && board[4] === letter && board[8] === letter) {\n        won = 1;\n    } else if (\n        board[2] === letter &&\n        board[4] === letter &&\n        board[6] === letter\n    ) {\n        won = 1;\n    }\n\n    if (!board.includes(null) && won == 0) {\n        won = 2;\n    }\n    return won;\n}\n\nfunction findAppropriateSentence(gameWon, letter) {\n    switch (gameWon) {\n        case 0:\n            return `Active Player: ` + letter;\n        case 1:\n            return `Winner: ` + letter;\n        default:\n            return `Draw!`;\n    }\n}\n"],"sourceRoot":""}