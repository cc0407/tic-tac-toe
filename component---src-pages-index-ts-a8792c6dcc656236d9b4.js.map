{"version":3,"sources":["webpack:///./src/components/Box.tsx","webpack:///./src/pages/index.ts","webpack:///./src/views/LandingPage/index.tsx"],"names":["Box","onClick","id","gameWon","className","Landing","useState","board","setBoard","letter","setLetter","setGameWon","findAppropriateSentence","map","index","key","boardCopy","won","i","includes","checkForWinner","href"],"mappings":"yIAEaA,EAAM,SAAC,GAA2B,IAA1BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,QAC9B,OACI,yBAAKC,UAAW,QAAiB,MAANF,GAAyB,GAAXC,EAAf,kBAAoDF,QAASA,GAClFC,ICJEG,UCEQ,WACnB,MAA0BC,mBAAS,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAA7EC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,KAA9BG,EAAP,KAAeC,EAAf,KACA,EAA8BJ,mBAAS,GAAhCH,EAAP,KAAgBQ,EAAhB,KACA,OACI,yBAAKP,UAAU,UACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,SAAf,YAEA,yBAAKA,UAAU,YAgF/B,SAAkCD,EAASM,GACvC,OAAQN,GACJ,KAAK,EACD,MAAO,kBAAoBM,EAC/B,KAAK,EACD,MAAO,WAAaA,EACxB,QACI,eAvF+BG,CAAwBT,EAASM,IAE5D,yBAAKL,UAAU,aACVG,EAAMM,KAAI,SAACX,EAAIY,GAAL,OACP,kBAAC,EAAD,CACAC,IAAKD,EACLZ,GAAIA,EACJC,QAASA,EACTF,QAAS,WACL,GAAS,MAANC,GAAyB,GAAXC,EAAc,CAE3B,IAAMa,EAAY,YAAIT,GACtBS,EAAUF,GAASL,EACnBD,EAASQ,GAGT,IAAIC,EAoCpC,SAAwBV,EAAOE,GAG3B,IAFA,IAAIQ,EAAM,EAEDC,EAAI,EAAGA,EAAI,EAAGA,IAChBX,EAAMW,KAAOT,GAAUF,EAAMW,EAAE,KAAOT,GAAUF,EAAMW,EAAE,KAAOT,IAC9DQ,EAAM,GAId,IAASC,EAAI,EAAGA,GAAK,EAAGA,GAAK,EACtBX,EAAMW,KAAOT,GAAUF,EAAMW,EAAE,KAAOT,GAAUF,EAAMW,EAAE,KAAOT,IAC9DQ,EAAM,IAIXV,EAAM,KAAOE,GAAUF,EAAM,KAAOE,GAAUF,EAAM,KAAOE,GAGtDF,EAAM,KAAOE,GAAUF,EAAM,KAAOE,GAAUF,EAAM,KAAOE,KAF/DQ,EAAM,GAMNV,EAAMY,SAAS,OAAgB,GAAPF,IACxBA,EAAM,GAEV,OAAOA,EA7D+BG,CAAeJ,EAAUP,GACnC,GAAW,GAAPQ,EAEA,YADAN,EAAWM,GAMPP,EADW,MAAXD,EACU,IAGA,aAQlC,yBAAKL,UAAU,gBACXH,QAAS,WACLO,EAAS,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAC1DE,EAAU,KACVC,EAAW,KAJnB,YAQA,uBAAGP,UAAU,aACTiB,KAAK,mDADT","file":"component---src-pages-index-ts-a8792c6dcc656236d9b4.js","sourcesContent":["import React from 'react';\n\nexport const Box = ({onClick, id, gameWon}) => {\n    return(\n        <div className={`box ` + ((id == null && gameWon == 0) ? `empty` : `filled`)} onClick={onClick}>\n            {id}\n        </div>\n    );\n};","import { Landing } from '../views/LandingPage/index';\nexport default Landing;","import React, { useState } from 'react';\nimport { Box } from '../../components/Box';\n\nexport const Landing = () => {\n    const [board, setBoard] = useState([null, null, null, null, null, null, null, null, null]);\n    const [letter, setLetter] = useState('X');\n    const [gameWon, setGameWon] = useState(0);\n    return (\n        <div className=\"window\">\n            <div className=\"viewport\">\n                <div className=\"title\">Welcome!</div>\n                \n                <div className=\"subtitle\">{findAppropriateSentence(gameWon, letter)}</div>\n\n                <div className=\"gameBoard\">\n                    {board.map((id, index) => (\n                        <Box \n                        key={index}\n                        id={id}\n                        gameWon={gameWon}\n                        onClick={()=>{\n                            if(id == null && gameWon == 0) {\n                                //update board\n                                const boardCopy = [...board];\n                                boardCopy[index] = letter;\n                                setBoard(boardCopy);\n\n                                //check if theres a winner\n                                var won = checkForWinner(boardCopy,letter);\n                                if (won != 0) {\n                                    setGameWon(won);\n                                    return;\n                                }\n                                else {\n                                    //swap letter\n                                    if (letter === 'X') {\n                                        setLetter('O');\n                                    }\n                                    else {\n                                        setLetter('X');\n                                    }\n                                } \n                            }\n                        }}\n                        />\n                    ))}\n                </div>\n                <div className=\"confirmButton\" \n                    onClick={() => {\n                        setBoard([null, null, null, null, null, null, null, null, null]);\n                        setLetter('X');\n                        setGameWon(0);\n                }}>\n                    New Game\n                </div>\n                <a className=\"accentLink\"\n                    href=\"https://github.com/cc0407/tic-tac-toe/tree/main\">\n                    View development here.\n                </a>\n            </div>\n        </div>\n    )\n}\n\nfunction checkForWinner(board, letter) {\n    var won = 0;\n    //col\n    for (var i = 0; i < 3; i++) {\n        if(board[i] === letter && board[i+3] === letter && board[i+6] === letter) {\n            won = 1;\n        }\n    }\n    //row\n    for (var i = 0; i <= 6; i += 3) {\n        if(board[i] === letter && board[i+1] === letter && board[i+2] === letter) {\n            won = 1;\n        }\n    }\n    //diag\n    if(board[0] === letter && board[4] === letter && board[8] === letter) {\n        won = 1;\n    }\n    else if(board[2] === letter && board[4] === letter && board[6] === letter) {\n        won = 1;\n    }\n\n    if(!board.includes(null) && won == 0) {\n        won = 2;\n    }\n    return won;\n}\n\nfunction findAppropriateSentence (gameWon, letter) {\n    switch (gameWon){\n        case 0:\n            return `Active Player: ` + letter;\n        case 1:\n            return `Winner: ` + letter;\n        default:\n            return `Draw!`\n    }\n}"],"sourceRoot":""}